# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Techcommune Backend CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
          USERNAME: ${{ env.USERNAME }}
          PASSWORD: ${{ env.PASSWORD }}
          USERNAME1: ${{ env.USERNAME1 }}
          PASSWORD1: ${{ env.PASSWORD1 }}
          SECRET_KEY: ${{ env.SECRET_KEY }}
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          BUCKET_NAME: ${{ env.BUCKET_NAME }}
          FOLDER_FOR_SERVICE_PROVIDER_IMAGES: ${{ env.FOLDER_FOR_SERVICE_PROVIDER_IMAGES }}
          FOLDER_FOR_EVENTS: ${{ env.FOLDER_FOR_EVENTS }}
          FRONTEND_URL: ${{ env.FRONTEND_URL }}
          BACKEND_IP: ${{ env.BACKEND_IP }}
        run: |
          mvn -B package --file pom.xml \
            -Ddatabase.url=$DATABASE_URL \
            -Dusername=$USERNAME \
            -Dpassword=$PASSWORD \
            -Dfrontend.url=$FRONTEND_URL \
            -Dbackend.ip=$BACKEND_IP
